---
section: charts
layout: layouts/base.njk
---

{% set css %}
    {% include "assets/css/inline.css" %}
    {% include "assets/css/custom.css" %}
  {% endset %}

        <meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>Map</title>
        <meta name="description" content="">
        <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
        <link rel="preconnect" href="https://fonts.gstatic.com">
        <link href="https://fonts.googleapis.com/css2?family=Work+Sans:wght@300;400;500;600;700&display=swap" rel="stylesheet">
        <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
        <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>
        <script src="https://cdn.amcharts.com/lib/4/themes/dataviz.js"></script>
        <script src="https://cdn.amcharts.com/lib/4/themes/animated.js"></script>

        <style>

            body { margin: 0; padding: 0; font-family: 'Work Sans', sans-serif; display: grid;
                    height: 100vh;
                    grid-template-rows: auto 1fr auto;
                     }
            main { margin: 0; }
            
            a[href],
                a[href]:visited {
                }

                a[href]:not(:hover) {
                text-decoration: none;
                }

            .pagetesthead {
                color: cornflowerblue;
                }

            .chart_container{
                display:flex;
            }         

            #chartdiv, #chartdiv2{
                width:50%;
                height:500px;
            }
        </style>

    </head>
    <body>

        <main>
            <div class="chart_container">
                <div id="chartdiv"></div>
                <div id="chartdiv2"></div>
            </div>
        </main>

        <script>
                fetch("https://sheets.googleapis.com/v4/spreadsheets/15tngdLyCqm_wzF9Jv2za4DdGLxPyOf9BHtVwlEIK-J0/values/A:Z?key=AIzaSyDs78mMVJgSyOZSkYmx0wLLPOCbNDTRCq0")
                    .then(res => res.json())
                    .then(data => {
                        let headerFields = [];
                        let dataFields = [];
                        let currLocation = "";

                        let currLat = 0;
                        let currLng = 0;
                        let currObj = {};
                        let popups = {};

                        let popup_fields = []

                        let div = document.createElement('div');

                        let chart_data = [];
                        let chart_data2 = [];
                        headerFields = data.values[0];

                        data.values.forEach((row, i) => {                            
                            if(i > 0)                  
                            {       
                                let obj1 = {};
                                let obj2 = {};
                                row.forEach((v,ii) => {
                                    if (headerFields[ii] == "Total count")
                                        obj1["value"] = v;
                                    else if(headerFields[ii] == "Microplastics concentration (Number of microplastics / Filtered water volume)")
                                        obj2["value"] = v;
                                    else if(headerFields[ii] == "Date"){
                                        obj1["field"] = `${i} ${v} `;
                                        obj2["field"] = `${i} ${v} `;
                                    }                                          
                                    else if(headerFields[ii] == "Location"){
                                        obj1["field"] += v;                                                                         
                                        obj2["field"] += v; 
                                    }
                                })   
                                chart_data.push(obj1);  
                                chart_data2.push(obj2);                                
                            }                        
                        });

                        am4core.ready(function() {
                            // Themes begin
                            am4core.useTheme(am4themes_animated);
                            // Themes end

                            var chart = am4core.create("chartdiv", am4charts.XYChart);
                            chart.padding(40, 40, 40, 40);

                            let title = chart.titles.create();
                            title.text = "Total count";

                            chart.data = chart_data;

                            var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
                            categoryAxis.renderer.grid.template.location = 0;
                            categoryAxis.dataFields.category = "field";
                            categoryAxis.renderer.minGridDistance = 1;
                            categoryAxis.renderer.inversed = true;
                            categoryAxis.renderer.grid.template.disabled = true;

                            var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
                            valueAxis.min = 0;

                            var series = chart.series.push(new am4charts.ColumnSeries());
                            series.dataFields.categoryY = "field";
                            series.dataFields.valueX = "value";
                            series.tooltipText = "{valueX.value}"
                            series.columns.template.strokeOpacity = 0;
                            series.columns.template.column.cornerRadiusBottomRight = 5;
                            series.columns.template.column.cornerRadiusTopRight = 5;

                            var labelBullet = series.bullets.push(new am4charts.LabelBullet())
                            labelBullet.label.horizontalCenter = "left";
                            labelBullet.label.dx = 10;
                            labelBullet.label.text = "{values.valueX.workingValue.formatNumber('#.0as')}";
                            labelBullet.locationX = 1;

                            // as by default columns of the same series are of the same color, we add adapter which takes colors from chart.colors color set
                            series.columns.template.adapter.add("fill", function(fill, target){
                                return chart.colors.getIndex(target.dataItem.index);
                            });

                            categoryAxis.sortBySeries = series;  


                            //2nd chart
                            var chart = am4core.create("chartdiv2", am4charts.XYChart);
                            chart.padding(40, 40, 40, 40);

                            let title2 = chart.titles.create();
                            title2.text = "Microplastics concentration (Number of microplastics / Filtered water volume)";

                            chart.data = chart_data2;

                            var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
                            categoryAxis.renderer.grid.template.location = 0;
                            categoryAxis.dataFields.category = "field";
                            categoryAxis.renderer.minGridDistance = 1;
                            categoryAxis.renderer.inversed = true;
                            categoryAxis.renderer.grid.template.disabled = true;

                            var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
                            valueAxis.min = 0;

                            var series = chart.series.push(new am4charts.ColumnSeries());
                            series.dataFields.categoryY = "field";
                            series.dataFields.valueX = "value";
                            series.tooltipText = "{valueX.value}"
                            series.columns.template.strokeOpacity = 0;
                            series.columns.template.column.cornerRadiusBottomRight = 5;
                            series.columns.template.column.cornerRadiusTopRight = 5;

                            var labelBullet = series.bullets.push(new am4charts.LabelBullet())
                            labelBullet.label.horizontalCenter = "left";
                            labelBullet.label.dx = 10;
                            labelBullet.label.text = "{values.valueX.workingValue}";
                            labelBullet.locationX = 1;

                            // as by default columns of the same series are of the same color, we add adapter which takes colors from chart.colors color set
                            series.columns.template.adapter.add("fill", function(fill, target){
                                return chart.colors.getIndex(target.dataItem.index);
                            });

                            categoryAxis.sortBySeries = series;     
                        });
                    });
            </script>
    <script>{{ js | jsmin | safe }}</script>
